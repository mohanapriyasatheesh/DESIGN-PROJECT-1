# -*- coding: utf-8 -*-
"""Copy of crop_prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fm60TCNnS5Nr89aJLfFJepdvyuvQHrDR
"""

import numpy as np
import pandas as pd
df=pd.read_csv('/content/Crop_recommendation (1).csv')
df.head()

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)
warnings.simplefilter(action='ignore', category=UserWarning)
import seaborn as sns
import matplotlib.pyplot as plt

df.describe()

sns.heatmap(df.isnull(),cmap="coolwarm")

plt.show()
plt.figure(figsize=(12,5))
plt.subplot(1, 2, 1)

sns.distplot(df['temperature'],color="purple",bins=15,hist_kws={'alpha':0.2})
plt.subplot(1, 2, 2)
sns.distplot(df['ph'],color="green",bins=15,hist_kws={'alpha':0.2})
sns.countplot(y='label',data=df, palette="plasma_r")
sns.pairplot(df, hue = 'label')
sns.jointplot(x="rainfall",y="humidity",data=df[(df['temperature']<30) & (df['rainfall']>120)],hue="label")
sns.jointplot(x="K",y="N",data=df[(df['N']>40)&(df['K']>40)],hue="label")
c=df.label.astype('category')
targets = dict(enumerate(c.cat.categories))
df['target']=c.cat.codes

y=df.target
X=df[['N','P','K','temperature','humidity','ph','rainfall']]
sns.heatmap(X.corr())
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler

X_train, X_test, y_train, y_test = train_test_split(X, y,random_state=1)

scaler = MinMaxScaler()
X_train_scaled = scaler.fit_transform(X_train)

# we must apply the scaling to the test set as well that we are computing for the training set
X_test_scaled = scaler.transform(X_test)
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier()
knn.fit(X_train_scaled, y_train)
knn.score(X_test_scaled, y_test)
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier()
knn.fit(X_train_scaled, y_train)
knn.score(X_test_scaled, y_test)

def predict_crop(N, P, K, temperature, humidity, ph, rainfall):

  input_data = pd.DataFrame({
      'N': [N],
      'P': [P],
      'K': [K],
      'temperature': [temperature],
      'humidity': [humidity],
      'ph': [ph],
      'rainfall': [rainfall]
  })
  input_data_scaled = scaler.transform(input_data)

 # Make the prediction using the trained KNN model.
  prediction = knn.predict(input_data_scaled)[0]

  # Get the crop name corresponding to the prediction.
  crop_name = targets[prediction]

  return crop_name

# Example usage:
predicted_crop = predict_crop(N=12, P=20, K=43, temperature=20.879744, humidity=28.002744, ph=6.502985, rainfall=202.935536)
print(f"The predicted best crop is: {predicted_crop}")